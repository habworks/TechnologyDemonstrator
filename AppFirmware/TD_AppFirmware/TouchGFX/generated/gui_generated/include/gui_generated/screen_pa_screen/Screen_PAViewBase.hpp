/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#ifndef SCREEN_PAVIEWBASE_HPP
#define SCREEN_PAVIEWBASE_HPP

#include <gui/common/FrontendApplication.hpp>
#include <mvp/View.hpp>
#include <gui/screen_pa_screen/Screen_PAPresenter.hpp>
#include <touchgfx/widgets/Box.hpp>
#include <touchgfx/widgets/ScalableImage.hpp>
#include <touchgfx/widgets/TextArea.hpp>
#include <touchgfx/widgets/ButtonWithIcon.hpp>
#include <touchgfx/widgets/TextAreaWithWildcard.hpp>
#include <touchgfx/containers/Slider.hpp>

class Screen_PAViewBase : public touchgfx::View<Screen_PAPresenter>
{
public:
    Screen_PAViewBase();
    virtual ~Screen_PAViewBase() {}
    virtual void setupScreen();
    virtual void afterTransition();

    /*
     * Virtual Action Handlers
     */
    virtual void updateScreen_PA()
    {
        // Override and implement this function in Screen_PA
    }

    virtual void greenSliderValueChanged(int value)
    {
        // Override and implement this function in Screen_PA
    }

    virtual void redSliderValueChanged(int value)
    {
        // Override and implement this function in Screen_PA
    }

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
    }

    /*
     * Member Declarations
     */
    touchgfx::Box __background;
    touchgfx::ScalableImage scalableImage1;
    touchgfx::TextArea textArea1;
    touchgfx::ButtonWithIcon buttonWithIconPA_Home;
    touchgfx::Box boxColor;
    touchgfx::TextAreaWithOneWildcard textAreaXaxis;
    touchgfx::TextAreaWithOneWildcard textAreaYaxis;
    touchgfx::TextAreaWithOneWildcard textAreaZaxis;
    touchgfx::Slider sliderRed;
    touchgfx::Slider sliderGreen;
    touchgfx::TextArea textArea2;
    touchgfx::TextArea textArea2_1;
    touchgfx::TextArea textArea2_1_1;
    touchgfx::TextArea textArea2_2;

    /*
     * Wildcard Buffers
     */
    static const uint16_t TEXTAREAXAXIS_SIZE = 10;
    touchgfx::Unicode::UnicodeChar textAreaXaxisBuffer[TEXTAREAXAXIS_SIZE];
    static const uint16_t TEXTAREAYAXIS_SIZE = 10;
    touchgfx::Unicode::UnicodeChar textAreaYaxisBuffer[TEXTAREAYAXIS_SIZE];
    static const uint16_t TEXTAREAZAXIS_SIZE = 10;
    touchgfx::Unicode::UnicodeChar textAreaZaxisBuffer[TEXTAREAZAXIS_SIZE];

private:

    /*
     * Callback Declarations
     */
    touchgfx::Callback<Screen_PAViewBase, const touchgfx::AbstractButton&> buttonCallback;
    touchgfx::Callback<Screen_PAViewBase, const touchgfx::Slider&, int> sliderValueChangedCallback;

    /*
     * Callback Handler Declarations
     */
    void buttonCallbackHandler(const touchgfx::AbstractButton& src);
    void sliderValueChangedCallbackHandler(const touchgfx::Slider& src, int value);

};

#endif // SCREEN_PAVIEWBASE_HPP
