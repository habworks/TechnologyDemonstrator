/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#include <gui_generated/screen_opening_screen/Screen_OpeningViewBase.hpp>
#include <touchgfx/Color.hpp>
#include "BitmapDatabase.hpp"
#include <texts/TextKeysAndLanguages.hpp>

Screen_OpeningViewBase::Screen_OpeningViewBase() :
    interaction1EndedCallback(this, &Screen_OpeningViewBase::interaction1EndedCallbackHandler)
{

    __background.setPosition(0, 0, 480, 272);
    __background.setColor(touchgfx::Color::getColorFrom24BitRGB(0, 0, 0));

    OpenScreenBackGround.setXY(-74, -49);
    OpenScreenBackGround.setBitmap(touchgfx::Bitmap(BITMAP_BACKSPLASH_ID));

    Logo.setBitmap(touchgfx::Bitmap(BITMAP_IMRLOGOTRANSPARENT_ID));
    Logo.setPosition(24, 94, 433, 113);
    Logo.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
    Logo.setAlpha(20);

    textArea1.setXY(11, 13);
    textArea1.setColor(touchgfx::Color::getColorFrom24BitRGB(225, 50, 50));
    textArea1.setLinespacing(0);
    textArea1.setTypedText(touchgfx::TypedText(T_SINGLEUSEID5));

    add(__background);
    add(OpenScreenBackGround);
    add(Logo);
    add(textArea1);
}

void Screen_OpeningViewBase::setupScreen()
{

    //Interaction1
    //When screen transition begins fade Logo
    //Fade Logo to alpha:255 with LinearIn easing in 2000 ms (120 Ticks)
    Logo.clearFadeAnimationEndedAction();
    Logo.startFadeAnimation(255, 120, touchgfx::EasingEquations::linearEaseIn);
    Logo.setFadeAnimationEndedAction(interaction1EndedCallback);

}

void Screen_OpeningViewBase::interaction1EndedCallbackHandler(const touchgfx::FadeAnimator<touchgfx::ScalableImage>& comp)
{
    //Interaction2
    //When Interaction1 completed change screen to Screen_MainMenu
    //Go to Screen_MainMenu with no screen transition
    application().gotoScreen_MainMenuScreenNoTransition();
}
